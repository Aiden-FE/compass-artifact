import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e as t}from"./app-b0d823bb.js";const e={},p=t(`<h1 id="compass-aiden-utils" tabindex="-1"><a class="header-anchor" href="#compass-aiden-utils" aria-hidden="true">#</a> @compass-aiden/utils</h1><blockquote><p>工具函数库</p></blockquote><h2 id="快速上手" tabindex="-1"><a class="header-anchor" href="#快速上手" aria-hidden="true">#</a> 快速上手</h2><p><code>npm install @compass-aiden/utils</code> 安装依赖</p><p>ESModule 环境使用:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token constant">VERSION</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@compass-aiden/utils&#39;</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Current utils version is %s&#39;</span><span class="token punctuation">,</span> <span class="token constant">VERSION</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Commonjs 环境使用:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token constant">VERSION</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">&#39;@compass-aiden/utils&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Current utils version is %s&#39;</span><span class="token punctuation">,</span> <span class="token constant">VERSION</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>UMD 环境使用:</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://cdn.jsdelivr.net/npm/@compass-aiden/utils/dist/main.umd.min.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token constant">VERSION</span> <span class="token punctuation">}</span> <span class="token operator">=</span> window<span class="token punctuation">.</span>CompassUtils<span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Current utils version is %s&#39;</span><span class="token punctuation">,</span> <span class="token constant">VERSION</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="可用实用程序列表" tabindex="-1"><a class="header-anchor" href="#可用实用程序列表" aria-hidden="true">#</a> 可用实用程序列表</h2><h3 id="util" tabindex="-1"><a class="header-anchor" href="#util" aria-hidden="true">#</a> Util</h3><h4 id="compareversion" tabindex="-1"><a class="header-anchor" href="#compareversion" aria-hidden="true">#</a> compareVersion</h4><p><strong>版本</strong>:</p><p>1.6.3</p><p><strong>描述</strong>:</p><p>比较两个版本的大小</p><p><strong>类型</strong>:</p><p><code>(currentVersion: string, comparedVersion: string, trimSymbolPattern?: RegExp): 1 | -1 | 0</code></p><ul><li>currentVersion 当前版本</li><li>comparedVersion 比较的版本</li><li>trimSymbolPattern 可选, 为正则表达式,符合条件的字符在移除后进行比较,默认匹配 v 字符</li></ul><p>返回值:</p><p>1 大于比较版本;</p><p>-1 小于比较版本;</p><p>0 等于比较版本.</p><p><strong>示例</strong>:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> compareVersion <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@compass-aiden/utils&#39;</span><span class="token punctuation">;</span>

<span class="token function">compareVersion</span><span class="token punctuation">(</span><span class="token string">&#39;v1.0.0&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2.0.0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// =&gt; -1</span>
<span class="token function">compareVersion</span><span class="token punctuation">(</span><span class="token string">&#39;a2.0.0&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;B1.0.0&#39;</span><span class="token punctuation">,</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">a|b</span><span class="token regex-delimiter">/</span><span class="token regex-flags">gi</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// =&gt; 1</span>
<span class="token function">compareVersion</span><span class="token punctuation">(</span><span class="token string">&#39;v1.0.0&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;V1.0.0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// =&gt; 0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="downloadfile" tabindex="-1"><a class="header-anchor" href="#downloadfile" aria-hidden="true">#</a> downloadFile</h4><p><strong>版本</strong>:</p><p>1.6.3</p><p><strong>描述</strong>:</p><p>文件下载方法</p><p><strong>类型</strong>:</p><p><code>(data: BlobPart, filename: string, blobOption: BlobPropertyBag): void</code></p><ul><li>data 可被 Blob 处理的数据</li><li>filename 指定的文件名</li><li>blobOption blob 处理 data 时的配置选项</li></ul><p><strong>示例</strong>:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">downloadFile</span><span class="token punctuation">(</span>excelData<span class="token punctuation">,</span> <span class="token string">&#39;example.xlsx&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="encodephonenumber" tabindex="-1"><a class="header-anchor" href="#encodephonenumber" aria-hidden="true">#</a> encodePhoneNumber</h4><p><strong>版本</strong>:</p><p>1.6.3</p><p><strong>描述</strong>:</p><p>加密手机号码,脱敏处理</p><p><strong>类型</strong>:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">encodePhoneNumber</span> <span class="token operator">=</span> <span class="token punctuation">(</span>
  <span class="token doc-comment comment">/** 手机号码或国际号码 */</span>
  phone<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
  <span class="token doc-comment comment">/** 配置 */</span>
  option<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * <span class="token keyword">@description</span> 加密字符的长度
     * <span class="token keyword">@default</span> 4
     */</span>
    encodeLength<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * <span class="token keyword">@description</span> 向右偏移长度,影响加密块离左边的距离
     * <span class="token keyword">@default</span> 3
     */</span>
    offsetLength<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * <span class="token keyword">@description</span> 是否为国际号码
     * <span class="token keyword">@default</span> false
     */</span>
    isCountry<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * <span class="token keyword">@description</span> 国际区号后的分割符, 如 +86 176的分割符为&#39; &#39;
     * <span class="token keyword">@default</span> &#39; &#39;
     */</span>
    countryAfterSymbol<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * <span class="token keyword">@description</span> 掩码的替换字符
     * <span class="token keyword">@default</span> *
     */</span>
    maskChar<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例</strong>:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">encodePhoneNumber</span><span class="token punctuation">(</span><span class="token string">&#39;13533334444&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// =&gt; 135****4444</span>
<span class="token function">encodePhoneNumber</span><span class="token punctuation">(</span><span class="token string">&#39;+86 13533334444&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> isCountry<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// =&gt; +86 135****4444</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="promisetask" tabindex="-1"><a class="header-anchor" href="#promisetask" aria-hidden="true">#</a> promiseTask</h4><p><strong>版本</strong>:</p><p>1.6.3</p><p><strong>描述</strong>:</p><p>异步事务处理, 捕获异常不阻塞程序</p><p><strong>类型</strong>:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">promiseTask</span> <span class="token operator">=</span> <span class="token operator">&lt;</span>Result <span class="token operator">=</span> <span class="token builtin">unknown</span><span class="token punctuation">,</span> ExtraProperty <span class="token keyword">extends</span> <span class="token class-name">object</span> <span class="token operator">=</span> object<span class="token operator">&gt;</span><span class="token punctuation">(</span>
  <span class="token doc-comment comment">/**
   * <span class="token keyword">@description</span> 异步任务
   */</span>
  promise<span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Result<span class="token operator">&gt;</span><span class="token punctuation">,</span>
  <span class="token doc-comment comment">/**
   * <span class="token keyword">@description</span> 将数据属性额外附加在错误信息的属性内
   */</span>
  errorExt<span class="token operator">?</span><span class="token operator">:</span> ExtraProperty<span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token punctuation">(</span>Error <span class="token operator">&amp;</span> ExtraProperty<span class="token punctuation">)</span> <span class="token operator">|</span> Error <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span> Result <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>返回:</p><p>成功时返回<code>[null, Result]</code>,失败则返回<code>[(Error &amp; ExtraProperty) | Error, null]</code></p><p><strong>示例</strong>:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> asyncTask <span class="token operator">=</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> asyncTask2 <span class="token operator">=</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">invoke</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>error<span class="token punctuation">,</span> result<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">promiseTask</span><span class="token punctuation">(</span>asyncTask<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// handle error</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// handle result</span>

  <span class="token keyword">const</span> <span class="token punctuation">[</span>error2<span class="token punctuation">,</span> result2<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">promiseTask</span><span class="token punctuation">(</span>asyncTask2<span class="token punctuation">,</span> <span class="token punctuation">{</span> code<span class="token operator">:</span> <span class="token string">&#39;custom_error&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>error2<span class="token operator">?.</span>code <span class="token operator">===</span> <span class="token string">&#39;custom_error&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// handle custom error</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>result2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// handle result</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token function">invoke</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="replacevariablesinstring" tabindex="-1"><a class="header-anchor" href="#replacevariablesinstring" aria-hidden="true">#</a> replaceVariablesInString</h4><p><strong>版本</strong>:</p><p>1.6.3</p><p><strong>描述</strong>:</p><p>替换字符串中包裹起来的变量</p><p><strong>类型</strong>:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">replaceVariablesInString</span> <span class="token operator">=</span> <span class="token punctuation">(</span>
  <span class="token doc-comment comment">/** 字符串模板 */</span>
  templateString<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
  <span class="token doc-comment comment">/** 参数对象 */</span>
  params<span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例</strong>:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token string">&#39;This is test {{ test }} string.&#39;</span><span class="token punctuation">;</span>
<span class="token function">replaceVariablesInString</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token punctuation">{</span> test<span class="token operator">:</span> <span class="token string">&#39;hello&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// =&gt; &#39;This is test hello string.&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="properties" tabindex="-1"><a class="header-anchor" href="#properties" aria-hidden="true">#</a> Properties</h3><h4 id="demo" tabindex="-1"><a class="header-anchor" href="#demo" aria-hidden="true">#</a> Demo</h4><p><strong>版本</strong>:</p><p><strong>描述</strong>:</p><p><strong>类型</strong>:</p><p><strong>示例</strong>:</p><h4 id="version" tabindex="-1"><a class="header-anchor" href="#version" aria-hidden="true">#</a> VERSION</h4><p><strong>版本</strong>:</p><p>1.6.3</p><p><strong>描述</strong>:</p><p>当前使用的 @compass-aiden/utils 版本</p><p><strong>类型</strong>:</p><p><code>string</code></p><p><strong>示例</strong>:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token constant">VERSION</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@compass-aiden/utils&#39;</span><span class="token punctuation">;</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Current utils version is %s&#39;</span><span class="token punctuation">,</span> <span class="token constant">VERSION</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,80),o=[p];function c(i,l){return s(),a("div",null,o)}const d=n(e,[["render",c],["__file","index.html.vue"]]);export{d as default};
